version: 2.0

defaults: &defaults

aliases:
  - &docker_environment
    - image: docker:20-git
  - &checkout
    path: ~/opennms-container
  - &build_container
    name: Building Container Image
    command: ~/opennms-container/.circleci/build.sh
  - &registry_login
    name: Login Container Registry
    command: |
      docker login -u ${CONTAINER_REGISTRY_LOGIN} -p ${CONTAINER_REGISTRY_PASS}
      KEY_FOLDER=~/.docker/trust/private
      mkdir -p $KEY_FOLDER
      echo "$DELEGATE_PRIVATE_KEY" | base64 -d > $KEY_FOLDER/$DELEGATE_PRIVATE_KEY_NAME.key
      chmod 600 $KEY_FOLDER/*
      env | grep DOCKER
      echo "BASH_ENV: $BASH_ENV"
      cat $BASH_ENV
      docker trust key load $KEY_FOLDER/$DELEGATE_PRIVATE_KEY_NAME.key
  - &bash_env
    name: Setup Environment Variables
    command: |
      echo "export CONTAINER_REGISTRY=docker.io" >> $BASH_ENV
      echo "export CONTAINER_REGISTRY_REPO=opennmsdcttest" >> $BASH_ENV
      echo "export DOCKER_CONTENT_TRUST=1" >> $BASH_ENV
      echo "export DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE=\"$DELEGATE_PRIVATE_KEY_PASSPHRASE\"" >> $BASH_ENV
  - &common_steps
    - checkout: *checkout
    - setup_remote_docker
    - run: apk add --no-cache bash
    - run: *bash_env
    - run: *registry_login
    - attach_workspace:
        at: ~/
    - run: *build_container
    - persist_to_workspace:
        root: ~/
        paths:
          - opennms-container/.circleci/build-numbers
    - store_artifacts:
        path: images/image.oci
  - &common_environment
    docker: *docker_environment
    steps: *common_steps

jobs:
  shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine:v0.7.1
    steps:
      - checkout
      - run:
          name: Shellcheck Scripts
          command: |
            find . -type f -name '*.sh' | wc -l
            find . -type f -name '*.sh' | xargs shellcheck --external-sources -e SC2129,SC2001,SC2013

  centos:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/centos
  
  ubuntu:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/ubuntu

  antora:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/antora

  confd:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/confd

  net-snmp:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/net-snmp
  
  isc-dhcp:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/isc-dhcp

  mini-mail:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/mini-mail

  gobgp:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/gobgp

  openjdk-8:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/openjdk-8

  openjdk-11:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/openjdk-11

  maven-jdk8:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/maven-jdk8

  maven-jdk11:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/maven-jdk11

  netlify-cli:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/netlify-cli

  ghr:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/ghr

  gulp:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/gulp

  build-env-jdk8:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/build-env-jdk8

  build-env-jdk11:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/build-env-jdk11

  tomcat:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/tomcat

  debian:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/debian

  debian-openjdk-8:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/debian-openjdk-8

  debian-openjdk-11:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/debian-openjdk-11

  debian-build-env-jdk8:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/debian-build-env-jdk8

  debian-build-env-jdk11:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/debian-build-env-jdk11

  snapcraft:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/snapcraft

  yum-repo:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/yum-repo

  gns3-horizon:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/gns3-horizon

  gns3-minion:
    <<: *common_environment
    working_directory: ~/opennms-container/projects/gns3-minion

workflows:
  version: 2
  container_build:
    jobs:
      - shellcheck
#      - tomcat:
#          context: "build-context"
#          requires:
#            - shellcheck
      - centos:
          context: "build-context"
          requires:
            - shellcheck
#      - ubuntu:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - antora:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - confd:
#          context: "build-context"
#          requires:
#            - centos
#      - net-snmp:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - isc-dhcp:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - mini-mail:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - gobgp:
#          context: "build-context"
#          requires:
#            - centos
#      - openjdk-8:
#          context: "build-context"
#          requires:
#            - centos
#      - openjdk-11:
#          context: "build-context"
#          requires:
#            - centos
#      - maven-jdk8:
#          context: "build-context"
#          requires:
#            - openjdk-8
#      - maven-jdk11:
#          context: "build-context"
#          requires:
#            - openjdk-11
#      - netlify-cli:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - ghr:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - gulp:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - build-env-jdk8:
#          context: "build-context"
#          requires:
#            - maven-jdk8
#      - build-env-jdk11:
#          context: "build-context"
#          requires:
#            - maven-jdk11
#      - debian:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - debian-openjdk-8:
#          context: "build-context"
#          requires:
#            - debian
#      - debian-openjdk-11:
#          context: "build-context"
#          requires:
#            - debian
#      - debian-build-env-jdk8:
#          context: "build-context"
#          requires:
#            - debian-openjdk-8
#      - debian-build-env-jdk11:
#          context: "build-context"
#          requires:
#            - debian-openjdk-11
#      - snapcraft:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - yum-repo:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - gns3-horizon:
#          context: "build-context"
#          requires:
#            - shellcheck
#      - gns3-minion:
#          context: "build-context"
#          requires:
#            - shellcheck
